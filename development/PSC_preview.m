function [plotax] = PSC_preview(plots,general,lines,labels,control,plotax)
%% General steup
% Reset the axes object
cla(plotax,'reset')
% Set the scale factor
scafac = 0.5;

% Control elements
assignin('base','plots',plots)

if strcmpi(plots{1,12},'diamond')
    %% Plot diamond
    % Plot a diamond patch
    line_nr = 1;
    patch([0 0.5 1 0.5],[0 -sin(1/3*pi) 0 sin(1/3*pi)],'white','Parent',plotax); hold all;
    plot([0 0.5 1 0.5 0],[0 -sin(1/3*pi) 0 sin(1/3*pi) 0],'Parent',plotax,...
         'LineWidth',control.setup.lines(1,line_nr).LineWidth.*scafac,...
         'LineStyle',control.setup.lines(1,line_nr).LineStyle,...    
         'Color',control.setup.lines(1,line_nr).Color);
    axis([0 1 -.92 .92]); axis off; hold off;
    % Set the position of the axes object
    set(plotax,'Position',[0.32 0.05 0.36 0.90]);
    % Plot the axis labels
    font_nr = 1;
    text(1.01,0,general{4,2},'HorizontalAlignment','left',...
                             'Color',control.setup.fonts(font_nr).Color,...
                             'FontName',control.setup.fonts(font_nr).FontName,...
                             'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                             'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                             'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                             'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(0.50,0.87,general{5,2},'HorizontalAlignment','center','VerticalAlignment','bottom',...
                                'Color',control.setup.fonts(font_nr).Color,...
                                'FontName',control.setup.fonts(font_nr).FontName,...
                                'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                                'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                                'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                                'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(0.50,-0.87,general{6,2},'HorizontalAlignment','center','VerticalAlignment','top',...
                                 'Color',control.setup.fonts(font_nr).Color,...
                                 'FontName',control.setup.fonts(font_nr).FontName,...
                                 'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                                 'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                                 'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                                 'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(-0.01,0,general{7,2},'HorizontalAlignment','right',...
                              'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight);
    % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       plot([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
            'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
            'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
            'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    set(plotax,'XScale','linear','YScale','linear');
    box on;
    
elseif strcmpi(plots{1,12},'ternary')
    %% Plot normal triangle
    % Plot a triangle patch
    line_nr = 1;
    patch([0 0.5 1],[0 sin(1/3*pi) 0],'white','Parent',plotax); hold all;
    plot([0 0.5 1 0],[0 sin(1/3*pi) 0 0],'Parent',plotax,...
         'LineWidth',control.setup.lines(1,line_nr).LineWidth.*scafac,...
         'LineStyle',control.setup.lines(1,line_nr).LineStyle,...    
         'Color',control.setup.lines(1,line_nr).Color);
    axis([0 1 0 0.92]); axis off; hold off;
    set(plotax,'Position',[0.15 0.06 0.70 0.91]);
    % Plot the axis labels
    font_nr = 1;
    text(1.01,0,general{4,2},'HorizontalAlignment','left',...
                             'Color',control.setup.fonts(font_nr).Color,...
                             'FontName',control.setup.fonts(font_nr).FontName,...
                             'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                             'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                             'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                             'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(0.50,0.87,general{5,2},'HorizontalAlignment','center','VerticalAlignment','bottom',...
                                'Color',control.setup.fonts(font_nr).Color,...
                                'FontName',control.setup.fonts(font_nr).FontName,...
                                'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                                'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                                'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                                'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(-0.01,0,general{7,2},'HorizontalAlignment','right',...
                              'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight);
   % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       plot([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
            'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
            'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
            'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    set(plotax,'XScale','linear','YScale','linear');
    box on;
    
elseif strcmpi(plots{1,12},'ternary inverted')
    %% Plot inverted triangle
    % Plot an inverted triangle patch
    line_nr = 1;
    patch([0 0.5 1],[0 -sin(1/3*pi) 0],'white','Parent',plotax); hold all;
    plot([0 0.5 1 0],[0 -sin(1/3*pi) 0 0],'Parent',plotax,...
         'LineWidth',control.setup.lines(1,line_nr).LineWidth.*scafac,...
         'LineStyle',control.setup.lines(1,line_nr).LineStyle,...    
         'Color',control.setup.lines(1,line_nr).Color);
    axis([0 1 -0.92 0.01]); axis off; hold off;
    set(plotax,'Position',[0.15 0.03 0.70 0.91]);
    % Plot the axis labels
    font_nr = 1;
    text(1.01,0,general{4,2},'HorizontalAlignment','left',...
                             'Color',control.setup.fonts(font_nr).Color,...
                             'FontName',control.setup.fonts(font_nr).FontName,...
                             'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                             'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                             'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                             'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(0.50,-0.87,general{6,2},'HorizontalAlignment','center','VerticalAlignment','top',...
                                 'Color',control.setup.fonts(font_nr).Color,...
                                 'FontName',control.setup.fonts(font_nr).FontName,...
                                 'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                                 'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                                 'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                                 'FontWeight',control.setup.fonts(font_nr).FontWeight);
    text(-0.01,0,general{7,2},'HorizontalAlignment','right',...
                              'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight);
    % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       plot([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
            'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
            'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
            'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    set(plotax,'XScale','linear','YScale','linear');
    box on;
    
elseif sum(strcmpi(plots{1,12},{'linear','linear invx','linear invy','linear invxy'})) == true
    %% Plot linear
    % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       plot([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
            'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
            'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
            'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    % Handles axes properties
    len = length(plots{1,14});
    res = strfind(plots{1,14},' ');
    axmin = str2double(plots{1,14}(2:res-1));
    axmax = str2double(plots{1,14}(res+1:len-1));
    set(plotax,'xlim',[axmin axmax]);
    len = length(plots{1,17});
    res = strfind(plots{1,17},' ');
    axmin = str2double(plots{1,17}(2:res-1));
    axmax = str2double(plots{1,17}(res+1:len-1));
    set(plotax,'ylim',[axmin axmax]);
    set(plotax,'XScale','linear','YScale','linear');
    if strcmpi(plots{1,12},'linear invxy')
        set('xdir','reverse','ydir','reverse')
    elseif strcmpi(plots{1,12},'linear invx')
        set('xdir','reverse')
    elseif strcmpi(plots{1,12},'linear invy')
        set('ydir','reverse')
    end
    box on;
    
    % Handle axis labels
    if strcmpi(plots{1,15},'ratio') == 1 || strcmpi(plots{1,15},'fraction') == 1
        xlab = plots{1,13};
    else
        xlab = sprintf('%s [%s]',plots{1,13},plots{1,15});
    end
    font_nr = 1;
    % Set the x-axis label
    xlab = xlabel(plotax,xlab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    if strcmpi(plots{1,18},'ratio') == 1 || strcmpi(plots{1,18},'fraction') == 1
        ylab = plots{1,16};
    else
        ylab = sprintf('%s [%s]',plots{1,16},plots{1,18});
    end
    % Set the x-axis label
    ylab = ylabel(plotax,ylab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    % Handle tick labels
    set(plotax,'FontName',control.setup.fonts(font_nr).FontName,...
            'FontAngle',control.setup.fonts(font_nr).FontAngle,...
            'FontSize',control.setup.fonts(font_nr).FontSize.*0.80.*scafac,...
            'FontUnits',control.setup.fonts(font_nr).FontUnits,...
            'FontWeight',control.setup.fonts(font_nr).FontWeight);
        
    % Handles position
    set(plotax,'Position',[0.10 0.06 0.80 0.91],'Visible','On');
                   
elseif sum(strcmpi(plots{1,12},{'semilogx','semilogx invx','semilogx invy','semilogx invxy'})) == true
    %% Plot semilogx
    % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       semilogx([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
                'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
                'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
                'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    % Handles axes properties
    len = length(plots{1,14});
    res = strfind(plots{1,14},' ');
    axmin = str2double(plots{1,14}(2:res-1));
    axmax = str2double(plots{1,14}(res+1:len-1));
    set(plotax,'xlim',[axmin axmax]);
    len = length(plots{1,17});
    res = strfind(plots{1,17},' ');
    axmin = str2double(plots{1,17}(2:res-1));
    axmax = str2double(plots{1,17}(res+1:len-1));
    set(plotax,'ylim',[axmin axmax]);
    set(plotax,'XScale','log','YScale','linear');
    if strcmpi(plots{1,12},'semilogx invxy')
        set('xdir','reverse','ydir','reverse')
    elseif strcmpi(plots{1,12},'semilogx invx')
        set('xdir','reverse')
    elseif strcmpi(plots{1,12},'semilogx invy')
        set('ydir','reverse')
    end
    box on;
    
    % Handle axis labels
    if strcmpi(plots{1,15},'ratio') == 1 || strcmpi(plots{1,15},'fraction') == 1
        xlab = plots{1,13};
    else
        xlab = sprintf('%s [%s]',plots{1,13},plots{1,15});
    end
    font_nr = 1;
    % Set the x-axis label
    xlab = xlabel(plotax,xlab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    if strcmpi(plots{1,18},'ratio') == 1 || strcmpi(plots{1,18},'fraction') == 1
        ylab = plots{1,16};
    else
        ylab = sprintf('%s [%s]',plots{1,16},plots{1,18});
    end
    % Set the x-axis label
    ylab = ylabel(plotax,ylab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    % Handle tick labels
    set(plotax,'FontName',control.setup.fonts(font_nr).FontName,...
            'FontAngle',control.setup.fonts(font_nr).FontAngle,...
            'FontSize',control.setup.fonts(font_nr).FontSize.*0.80.*scafac,...
            'FontUnits',control.setup.fonts(font_nr).FontUnits,...
            'FontWeight',control.setup.fonts(font_nr).FontWeight);
        
    % Handles position
    set(plotax,'Position',[0.10 0.06 0.80 0.91],'Visible','On');
    
elseif sum(strcmpi(plots{1,12},{'semilogy','semilogy invx','semilogy invy','semilogy invxy'})) == true
    %% Plot semilogy
    % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       semilogy([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
                'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
                'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
                'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    % Handles axes properties
    len = length(plots{1,14});
    res = strfind(plots{1,14},' ');
    axmin = str2double(plots{1,14}(2:res-1));
    axmax = str2double(plots{1,14}(res+1:len-1));
    set(plotax,'xlim',[axmin axmax]);
    len = length(plots{1,17});
    res = strfind(plots{1,17},' ');
    axmin = str2double(plots{1,17}(2:res-1));
    axmax = str2double(plots{1,17}(res+1:len-1));
    set(plotax,'ylim',[axmin axmax]);
    set(plotax,'XScale','linear','YScale','log');
    if strcmpi(plots{1,12},'semilogy invxy')
        set('xdir','reverse','ydir','reverse')
    elseif strcmpi(plots{1,12},'semilogy invx')
        set('xdir','reverse')
    elseif strcmpi(plots{1,12},'semilogy invy')
        set('ydir','reverse')
    end
    box on;

    % Handle axis labels
    if strcmpi(plots{1,15},'ratio') == 1 || strcmpi(plots{1,15},'fraction') == 1
        xlab = plots{1,13};
    else
        xlab = sprintf('%s [%s]',plots{1,13},plots{1,15});
    end
    font_nr = 1;
    % Set the x-axis label
    xlab = xlabel(plotax,xlab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    if strcmpi(plots{1,18},'ratio') == 1 || strcmpi(plots{1,18},'fraction') == 1
        ylab = plots{1,16};
    else
        ylab = sprintf('%s [%s]',plots{1,16},plots{1,18});
    end
    % Set the x-axis label
    ylab = ylabel(plotax,ylab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    % Handle tick labels
    set(plotax,'FontName',control.setup.fonts(font_nr).FontName,...
            'FontAngle',control.setup.fonts(font_nr).FontAngle,...
            'FontSize',control.setup.fonts(font_nr).FontSize.*0.80.*scafac,...
            'FontUnits',control.setup.fonts(font_nr).FontUnits,...
            'FontWeight',control.setup.fonts(font_nr).FontWeight);
        
    % Handles position
    set(plotax,'Position',[0.10 0.06 0.80 0.91],'Visible','On');
    
elseif sum(strcmpi(plots{1,12},{'loglog','loglog invx','loglog invy','loglog invxy'})) == true
    %% Plot loglog
    % Plot lines
    % Get the size of the input line array
    [m_lin,~] = size(lines);
    % Plot the lines
    for i = 1:2:m_lin
       hold all
       loglog([lines{i,2} lines{i+1,2}],[lines{i,3} lines{i+1,3}],...
              'LineWidth',control.setup.lines(1,lines{i,1}).LineWidth.*scafac,...
              'LineStyle',control.setup.lines(1,lines{i,1}).LineStyle,...    
              'Color',control.setup.lines(1,lines{i,1}).Color);
       hold off
    end
    % Handles axes properties
    len = length(plots{1,14});
    res = strfind(plots{1,14},' ');
    axmin = str2double(plots{1,14}(2:res-1));
    axmax = str2double(plots{1,14}(res+1:len-1));
    set(plotax,'xlim',[axmin axmax]);
    len = length(plots{1,17});
    res = strfind(plots{1,17},' ');
    axmin = str2double(plots{1,17}(2:res-1));
    axmax = str2double(plots{1,17}(res+1:len-1));
    set(plotax,'ylim',[axmin axmax]);
    set(plotax,'XScale','log','YScale','log');
    if strcmpi(plots{1,12},'loglog invxy')
        set('xdir','reverse','ydir','reverse')
    elseif strcmpi(plots{1,12},'loglog invx')
        set('xdir','reverse')
    elseif strcmpi(plots{1,12},'loglog invy')
        set('ydir','reverse')
    end
    box on;

    % Handle axis labels
    if strcmpi(plots{1,15},'ratio') == 1 || strcmpi(plots{1,15},'fraction') == 1
        xlab = plots{1,13};
    else
        xlab = sprintf('%s [%s]',plots{1,13},plots{1,15});
    end
    font_nr = 1;
    % Set the x-axis label
    xlab = xlabel(plotax,xlab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    if strcmpi(plots{1,18},'ratio') == 1 || strcmpi(plots{1,18},'fraction') == 1
        ylab = plots{1,16};
    else
        ylab = sprintf('%s [%s]',plots{1,16},plots{1,18});
    end
    % Set the x-axis label
    ylab = ylabel(plotax,ylab,'Color',control.setup.fonts(font_nr).Color,...
                              'FontName',control.setup.fonts(font_nr).FontName,...
                              'FontAngle',control.setup.fonts(font_nr).FontAngle,...
                              'FontSize',control.setup.fonts(font_nr).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(font_nr).FontUnits,...
                              'FontWeight',control.setup.fonts(font_nr).FontWeight); %#ok<NASGU>
    % Handle tick labels
    set(plotax,'FontName',control.setup.fonts(font_nr).FontName,...
            'FontAngle',control.setup.fonts(font_nr).FontAngle,...
            'FontSize',control.setup.fonts(font_nr).FontSize.*0.80.*scafac,...
            'FontUnits',control.setup.fonts(font_nr).FontUnits,...
            'FontWeight',control.setup.fonts(font_nr).FontWeight);
        
    % Handles position
    set(plotax,'Position',[0.10 0.06 0.80 0.91],'Visible','On');
    
else
    %% Error message
    fprintf('Plot type is not defined!\n')

end

%% Control cell
% assignin('base','plots',plots)

%% Plot labels
% Get the size of input label cell array
[m_lab,~] = size(labels);
% Plot the labels
for i = 1:1:m_lab
    text(labels{i,2},labels{i,3},sprintf(labels{i,4}),...
                              'Rotation',labels{i,5},...
                              'HorizontalAlignment','center',...
                              'VerticalAlignment','middle',...
                              'Color',control.setup.fonts(labels{i,1}).Color,...
                              'FontName',control.setup.fonts(labels{i,1}).FontName,...
                              'FontAngle',control.setup.fonts(labels{i,1}).FontAngle,...
                              'FontSize',control.setup.fonts(labels{i,1}).FontSize.*scafac,...
                              'FontUnits',control.setup.fonts(labels{i,1}).FontUnits,...
                              'FontWeight',control.setup.fonts(labels{i,1}).FontWeight);
end

end